
akka {
  loglevel = WARNING
  #loggers = ["akka.event.slf4j.Slf4jLogger"]
  #logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  http {
    client {
      host-connection-pool {
        # The maximum number of parallel connections that a connection pool to a
        # single host endpoint is allowed to establish. Must be greater than zero.
        max-connections = 8

        # The maximum number of times failed requests are attempted again,
        # (if the request can be safely retried) before giving up and returning an error.
        # Set to zero to completely disable request retries.
        max-retries = 2

        # The maximum number of open requests accepted into the pool across all
        # materializations of any of its client flows.
        # Protects against (accidentally) overloading a single pool with too many client flow materializations.
        # Note that with N concurrent materializations the max number of open request in the pool
        # will never exceed N * max-connections * pipelining-limit.
        # Must be a power of 2 and > 0!
        max-open-requests = 32

        # The maximum number of requests that are dispatched to the target host in
        # batch-mode across a single connection (HTTP pipelining).
        # A setting of 1 disables HTTP pipelining, since only one request per
        # connection can be "in flight" at any time.
        # Set to higher values to enable HTTP pipelining.
        # This value must be > 0.
        # (Note that, independently of this setting, pipelining will never be done
        # on a connection that still has a non-idempotent request in flight.
        # See http://tools.ietf.org/html/rfc7230#section-6.3.2 for more info.)
        pipelining-limit = 1

        # The time after which an idle connection pool (without pending requests)
        # will automatically terminate itself. Set to `infinite` to completely disable idle timeouts.
        idle-timeout = 30 s

        # Modify to tweak client settings for host connection pools only.
        #client = ${akka.http.client}
      }
    }
  }
}